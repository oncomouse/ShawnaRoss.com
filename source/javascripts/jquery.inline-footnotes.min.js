var magicMaxWidth = 1155;
var overlapOffset = 5;
var OVERLAP_DEBUG = true;

function addCSSRule(sheet, selector, rules, index) {
	if (index < 0) {
		index = sheet.rules.length;
	}
	if("insertRule" in sheet) {
	
		sheet.insertRule(selector + "{" + rules + "}", index);
	}
	else if("addRule" in sheet) {
		sheet.addRule(selector, rules, index);
	}
}

$(document).ready(function() {
	var $stylesheet = (function() {
		// Create the <style> tag
		var style = document.createElement("style");

		// Add a media (and/or media query) here if you'd like!
		// style.setAttribute("media", "screen")
		// style.setAttribute("media", "only screen and (max-width : 1024px)")

		// WebKit hack :(
		style.appendChild(document.createTextNode(""));
		document.head.appendChild(style);

		return style.sheet;
	})();

	$('sup[id^="fnref:"]').each(function() {
		var $this = $(this);

		$this.parent().css('position', 'relative');

		var footnoteNumber = $this.attr('id').replace(/fnref\:/,"");

		var $footnote = $('#fn\\:' + footnoteNumber);
		var $newFootnote = $('<span class="inline-footnote closed" id="fnote_'+footnoteNumber+'">' + $footnote.html() + '</span>');

		$newFootnote.find('p:first-child').html('<sup>' + footnoteNumber + '</sup>' + $newFootnote.find('p:first-child').html());

		$this.after($newFootnote);

		var $footnoteLink = $this.find('a');
		$footnoteLink.attr('href','#');
	
		$footnoteLink.click(function(e) {
			e.preventDefault();
			var footnoteNumber = $(this).parent().attr('id').replace(/fnref\:/,"");
			$('#fnote_' + footnoteNumber).toggleClass('closed opened');
			return false;
		});
	});

	$(window).resize(function() {
		$('sup[id^="fnref:"]').each(function() { 
			var $this = $(this);
			var footnoteNumber = $this.attr('id').replace(/fnref\:/,"");
			addCSSRule($stylesheet, '#fnote_'+footnoteNumber+':before, #fnote_'+footnoteNumber+':after', 'left: ' + ($this.offset().left - $this.parent().offset().left) + 'px !important;', -1);	
		});
		if($(window).width() > magicMaxWidth) {
			var footnotes = $('span[id^="fnote"]');
			var overlaps = footnotes.overlaps();
			while(overlaps.length > 0) {
				if (OVERLAP_DEBUG) {
					console.log("running collision detection");
				}
				
				// From a list of all possible overlaps, we have to calculate which elements overlap with which:
				var collisions = [];
				overlaps.each(function(i) {
					var $footnote = $(this);
					var footnoteNumber = $footnote.attr('id').replace(/fnote_/,"");
					var filteredFootnotes = footnotes.filter(function(x) { return parseInt(x) !== parseInt(footnoteNumber - 1); });
					filteredFootnotes.each(function() {
						var $testFootnote = $(this);
						var testFootnoteNumber = $testFootnote.attr('id').replace(/fnote_/,"");
						if ($footnote.overlaps('#' + $testFootnote.attr('id')).length > 0) {
							// Check if we've already detected the collision (if 1 overlaps 2, then 2 overlaps 1 will also be a collision):
							var tempCollision = [footnoteNumber, testFootnoteNumber].sort(function(a,b) { return a - b; });
							var searchedCollisions = collisions.filter(function(x) {return x.toString() === tempCollision.toString();} );
							if (searchedCollisions.length === 0){
								collisions.push(tempCollision);
							}
						}
					});
				});
				// Resolve collisions:
				$(collisions).each(function() {
					var $collider1 = $('#fnote_' + this[0]);
					var $collider2 = $('#fnote_' + this[1]);
					
					// Calculate degree of overlap:
					var overlap = $collider1.offset().top + $collider1.height() - $collider2.offset().top;
					
					// Shift second collider down by that overlap, plus a user-defined padding:
					$collider2.offset({top: $collider2.offset().top + overlap + overlapOffset});
				});
				
				// Make sure all collisions are resolved:
				overlaps = footnotes.overlaps();
			}
		}
	}).resize();
});